   1               		.file	"flow_sensor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	__floatunsisf
  12               	.global	__divsf3
  13               	.global	__mulsf3
  14               	.global	__fixunssfsi
  15               		.section	.rodata.str1.1,"aMS",@progbits,1
  16               	.LC0:
  17 0000 7469 636B 		.string	"ticks: %d | flow: %d | flow(ml): %d | qty: %d\n"
  17      733A 2025 
  17      6420 7C20 
  17      666C 6F77 
  17      3A20 2564 
  18               		.text
  19               	.global	get_flow1_value
  21               	get_flow1_value:
  22               	.LFB12:
  23               		.file 1 "Src/driver/flow_sensor.c"
   1:Src/driver/flow_sensor.c **** #include "../../Inc/driver/io.h"
   2:Src/driver/flow_sensor.c **** #include "../../Inc/driver/clock.h"
   3:Src/driver/flow_sensor.c **** #include "../../Inc/driver/flow_sensor.h"
   4:Src/driver/flow_sensor.c **** #include "../../Inc/driver/uart.h"
   5:Src/driver/flow_sensor.c **** #include "../../TC_driver/avr_compiler.h"
   6:Src/driver/flow_sensor.c **** #include "../../config.h"
   7:Src/driver/flow_sensor.c **** 
   8:Src/driver/flow_sensor.c **** // VARS
   9:Src/driver/flow_sensor.c **** uint16_t flow1 = 0;
  10:Src/driver/flow_sensor.c **** uint16_t flowTimer = 0;
  11:Src/driver/flow_sensor.c **** uint16_t flow1ml = 0;
  12:Src/driver/flow_sensor.c **** uint16_t flow1Ticks = 0;
  13:Src/driver/flow_sensor.c **** uint16_t qtyWater1 = 0;
  14:Src/driver/flow_sensor.c **** 
  15:Src/driver/flow_sensor.c **** //end stop1
  16:Src/driver/flow_sensor.c **** int switch1 = 1;
  17:Src/driver/flow_sensor.c **** int last_switch1;
  18:Src/driver/flow_sensor.c **** int end_stop1 = 0;
  19:Src/driver/flow_sensor.c **** 
  20:Src/driver/flow_sensor.c **** void get_flow1_value(void)
  21:Src/driver/flow_sensor.c **** {
  24               		.loc 1 21 1 view -0
  25               		.cfi_startproc
  26 0000 CF93      		push r28
  27               		.cfi_def_cfa_offset 3
  28               		.cfi_offset 28, -2
  29 0002 DF93      		push r29
  30               		.cfi_def_cfa_offset 4
  31               		.cfi_offset 29, -3
  32 0004 00D0      		rcall .
  33 0006 00D0      		rcall .
  34               		.cfi_def_cfa_offset 8
  35 0008 CDB7      		in r28,__SP_L__
  36 000a DEB7      		in r29,__SP_H__
  37               		.cfi_def_cfa_register 28
  38               	/* prologue: function */
  39               	/* frame size = 4 */
  40               	/* stack size = 6 */
  41               	.L__stack_usage = 6
  22:Src/driver/flow_sensor.c ****   if (get_timer_value() - flowTimer >= FLOW_REFRESH_TIME)
  42               		.loc 1 22 3 view .LVU1
  43               		.loc 1 22 7 is_stmt 0 view .LVU2
  44 000c 0E94 0000 		call get_timer_value
  45               	.LVL0:
  46               		.loc 1 22 25 view .LVU3
  47 0010 2091 0000 		lds r18,flowTimer
  48 0014 3091 0000 		lds r19,flowTimer+1
  49 0018 821B      		sub r24,r18
  50 001a 930B      		sbc r25,r19
  51               		.loc 1 22 6 view .LVU4
  52 001c 883E      		cpi r24,-24
  53 001e 9340      		sbci r25,3
  54 0020 00F4      		brsh .+2
  55 0022 00C0      		rjmp .L1
  23:Src/driver/flow_sensor.c ****   {
  24:Src/driver/flow_sensor.c ****     //spew("time: %d\n", get_timer_value()/1000);
  25:Src/driver/flow_sensor.c ****     
  26:Src/driver/flow_sensor.c ****     // The flow sensor outputs 4.5 pulses per second per litre/minute of flow.
  27:Src/driver/flow_sensor.c ****     //float calibrationFactor = 4.5 * (4250/500) ; //4.5;
  28:Src/driver/flow_sensor.c **** 
  29:Src/driver/flow_sensor.c ****     // Because this loop may not complete in exactly 1 second intervals we calculate
  30:Src/driver/flow_sensor.c ****     // the number of milliseconds that have passed since the last execution and use
  31:Src/driver/flow_sensor.c ****     // that to scale the output. We also apply the calibrationFactor to scale the output
  32:Src/driver/flow_sensor.c ****     // based on the number of pulses per second per units of measure (litres/minute in
  33:Src/driver/flow_sensor.c ****     // this case) coming from the sensor.
  34:Src/driver/flow_sensor.c ****     
  35:Src/driver/flow_sensor.c ****     flow1 = (((FLOW_REFRESH_TIME / (get_timer_value() - flowTimer)) * flow1Ticks) / CALIBRATION_FAC
  56               		.loc 1 35 5 is_stmt 1 view .LVU5
  57               		.loc 1 35 37 is_stmt 0 view .LVU6
  58 0024 0E94 0000 		call get_timer_value
  59               	.LVL1:
  60               		.loc 1 35 55 view .LVU7
  61 0028 2091 0000 		lds r18,flowTimer
  62 002c 3091 0000 		lds r19,flowTimer+1
  63 0030 BC01      		movw r22,r24
  64 0032 621B      		sub r22,r18
  65 0034 730B      		sbc r23,r19
  66               		.loc 1 35 34 view .LVU8
  67 0036 88EE      		ldi r24,lo8(-24)
  68 0038 93E0      		ldi r25,lo8(3)
  69 003a 0E94 0000 		call __udivmodhi4
  70               		.loc 1 35 69 view .LVU9
  71 003e 2091 0000 		lds r18,flow1Ticks
  72 0042 3091 0000 		lds r19,flow1Ticks+1
  73 0046 629F      		mul r22,r18
  74 0048 C001      		movw r24,r0
  75 004a 639F      		mul r22,r19
  76 004c 900D      		add r25,r0
  77 004e 729F      		mul r23,r18
  78 0050 900D      		add r25,r0
  79 0052 1124      		clr r1
  80               		.loc 1 35 83 view .LVU10
  81 0054 9C01      		movw r18,r24
  82 0056 50E0      		ldi r21,0
  83 0058 40E0      		ldi r20,0
  84 005a 2983      		std Y+1,r18
  85 005c 3A83      		std Y+2,r19
  86 005e 4B83      		std Y+3,r20
  87 0060 5C83      		std Y+4,r21
  88 0062 CA01      		movw r24,r20
  89 0064 B901      		movw r22,r18
  90 0066 0E94 0000 		call __floatunsisf
  91               	.LVL2:
  92 006a 20E0      		ldi r18,0
  93 006c 30E0      		ldi r19,0
  94 006e 40E1      		ldi r20,lo8(16)
  95 0070 52E4      		ldi r21,lo8(66)
  96 0072 6983      		std Y+1,r22
  97 0074 7A83      		std Y+2,r23
  98 0076 8B83      		std Y+3,r24
  99 0078 9C83      		std Y+4,r25
 100 007a 6981      		ldd r22,Y+1
 101 007c 7A81      		ldd r23,Y+2
 102 007e 8B81      		ldd r24,Y+3
 103 0080 9C81      		ldd r25,Y+4
 104 0082 0E94 0000 		call __divsf3
 105               	.LVL3:
 106               		.loc 1 35 104 view .LVU11
 107 0086 20E0      		ldi r18,0
 108 0088 30E0      		ldi r19,0
 109 008a 40E7      		ldi r20,lo8(112)
 110 008c 52E4      		ldi r21,lo8(66)
 111 008e 6983      		std Y+1,r22
 112 0090 7A83      		std Y+2,r23
 113 0092 8B83      		std Y+3,r24
 114 0094 9C83      		std Y+4,r25
 115 0096 6981      		ldd r22,Y+1
 116 0098 7A81      		ldd r23,Y+2
 117 009a 8B81      		ldd r24,Y+3
 118 009c 9C81      		ldd r25,Y+4
 119 009e 0E94 0000 		call __divsf3
 120               	.LVL4:
 121               		.loc 1 35 107 view .LVU12
 122 00a2 20E0      		ldi r18,0
 123 00a4 30E0      		ldi r19,0
 124 00a6 4AE7      		ldi r20,lo8(122)
 125 00a8 54E4      		ldi r21,lo8(68)
 126 00aa 6983      		std Y+1,r22
 127 00ac 7A83      		std Y+2,r23
 128 00ae 8B83      		std Y+3,r24
 129 00b0 9C83      		std Y+4,r25
 130 00b2 6981      		ldd r22,Y+1
 131 00b4 7A81      		ldd r23,Y+2
 132 00b6 8B81      		ldd r24,Y+3
 133 00b8 9C81      		ldd r25,Y+4
 134 00ba 0E94 0000 		call __mulsf3
 135               	.LVL5:
 136               		.loc 1 35 11 view .LVU13
 137 00be 6983      		std Y+1,r22
 138 00c0 7A83      		std Y+2,r23
 139 00c2 8B83      		std Y+3,r24
 140 00c4 9C83      		std Y+4,r25
 141 00c6 6981      		ldd r22,Y+1
 142 00c8 7A81      		ldd r23,Y+2
 143 00ca 8B81      		ldd r24,Y+3
 144 00cc 9C81      		ldd r25,Y+4
 145 00ce 0E94 0000 		call __fixunssfsi
 146               	.LVL6:
 147 00d2 6093 0000 		sts flow1,r22
 148 00d6 7093 0000 		sts flow1+1,r23
  36:Src/driver/flow_sensor.c ****     
  37:Src/driver/flow_sensor.c ****     //flow2 = (((FLOW_REFRESH_TIME / (T0_millis - flowTimer)) * flow2Ticks) / CALIBRATION_FACTOR)/6
  38:Src/driver/flow_sensor.c ****     // Note the time this processing pass was executed. Note that because we've
  39:Src/driver/flow_sensor.c ****     // disabled interrupts the millis() function won't actually be incrementing right
  40:Src/driver/flow_sensor.c ****     // at this point, but it will still return the value it was set to just before
  41:Src/driver/flow_sensor.c ****     // interrupts went away.
  42:Src/driver/flow_sensor.c **** 
  43:Src/driver/flow_sensor.c ****     flowTimer = get_timer_value();
 149               		.loc 1 43 5 is_stmt 1 view .LVU14
 150               		.loc 1 43 17 is_stmt 0 view .LVU15
 151 00da 0E94 0000 		call get_timer_value
 152               	.LVL7:
 153               		.loc 1 43 15 view .LVU16
 154 00de 8093 0000 		sts flowTimer,r24
 155 00e2 9093 0000 		sts flowTimer+1,r25
  44:Src/driver/flow_sensor.c **** 
  45:Src/driver/flow_sensor.c ****     // Divide the flow rate in litres/minute by 60 to determine how many litres have
  46:Src/driver/flow_sensor.c ****     // passed through the sensor in this 1 second interval, then multiply by 1000 to
  47:Src/driver/flow_sensor.c ****     // convert to millilitres.
  48:Src/driver/flow_sensor.c ****     flow1ml = (flow1 / 60) * 1000;
 156               		.loc 1 48 5 is_stmt 1 view .LVU17
 157               		.loc 1 48 22 is_stmt 0 view .LVU18
 158 00e6 2091 0000 		lds r18,flow1
 159 00ea 3091 0000 		lds r19,flow1+1
 160 00ee C901      		movw r24,r18
 161 00f0 6CE3      		ldi r22,lo8(60)
 162 00f2 70E0      		ldi r23,0
 163 00f4 0E94 0000 		call __udivmodhi4
 164               		.loc 1 48 28 view .LVU19
 165 00f8 88EE      		ldi r24,lo8(-24)
 166 00fa 93E0      		ldi r25,lo8(3)
 167 00fc 689F      		mul r22,r24
 168 00fe A001      		movw r20,r0
 169 0100 699F      		mul r22,r25
 170 0102 500D      		add r21,r0
 171 0104 789F      		mul r23,r24
 172 0106 500D      		add r21,r0
 173 0108 1124      		clr r1
 174               		.loc 1 48 13 view .LVU20
 175 010a 4093 0000 		sts flow1ml,r20
 176 010e 5093 0000 		sts flow1ml+1,r21
  49:Src/driver/flow_sensor.c ****     //flow2ml = (flow2 / 60) * 1000;
  50:Src/driver/flow_sensor.c ****     
  51:Src/driver/flow_sensor.c ****     // Add the millilitres passed in this second to the cumulative total
  52:Src/driver/flow_sensor.c ****     qtyWater1 += flow1;
 177               		.loc 1 52 5 is_stmt 1 view .LVU21
 178               		.loc 1 52 15 is_stmt 0 view .LVU22
 179 0112 8091 0000 		lds r24,qtyWater1
 180 0116 9091 0000 		lds r25,qtyWater1+1
 181 011a 820F      		add r24,r18
 182 011c 931F      		adc r25,r19
 183 011e 8093 0000 		sts qtyWater1,r24
 184 0122 9093 0000 		sts qtyWater1+1,r25
  53:Src/driver/flow_sensor.c ****     //qtyWater2 += flow2;
  54:Src/driver/flow_sensor.c **** 
  55:Src/driver/flow_sensor.c ****     spew("ticks: %d | flow: %d | flow(ml): %d | qty: %d\n", flow1Ticks, flow1, flow1ml, qtyWater1);
 185               		.loc 1 55 5 is_stmt 1 view .LVU23
 186 0126 9F93      		push r25
 187 0128 8F93      		push r24
 188 012a 5F93      		push r21
 189 012c 4F93      		push r20
 190 012e 3F93      		push r19
 191 0130 2F93      		push r18
 192 0132 8091 0000 		lds r24,flow1Ticks+1
 193 0136 8F93      		push r24
 194 0138 8091 0000 		lds r24,flow1Ticks
 195 013c 8F93      		push r24
 196 013e 80E0      		ldi r24,lo8(.LC0)
 197 0140 90E0      		ldi r25,hi8(.LC0)
 198 0142 9F93      		push r25
 199 0144 8F93      		push r24
 200 0146 0E94 0000 		call spew
 201               	.LVL8:
  56:Src/driver/flow_sensor.c ****     //spew("ticks: %d\n", flow1Ticks);
  57:Src/driver/flow_sensor.c **** 
  58:Src/driver/flow_sensor.c ****     flow1 = 0;
 202               		.loc 1 58 5 view .LVU24
 203               		.loc 1 58 11 is_stmt 0 view .LVU25
 204 014a 1092 0000 		sts flow1,__zero_reg__
 205 014e 1092 0000 		sts flow1+1,__zero_reg__
  59:Src/driver/flow_sensor.c ****     flow1Ticks = 0;
 206               		.loc 1 59 5 is_stmt 1 view .LVU26
 207               		.loc 1 59 16 is_stmt 0 view .LVU27
 208 0152 1092 0000 		sts flow1Ticks,__zero_reg__
 209 0156 1092 0000 		sts flow1Ticks+1,__zero_reg__
 210 015a CDBF      		out __SP_L__,r28
 211 015c DEBF      		out __SP_H__,r29
 212               	.L1:
 213               	/* epilogue start */
  60:Src/driver/flow_sensor.c ****   }
  61:Src/driver/flow_sensor.c **** }
 214               		.loc 1 61 1 view .LVU28
 215 015e 2496      		adiw r28,4
 216 0160 CDBF      		out __SP_L__,r28
 217 0162 DEBF      		out __SP_H__,r29
 218 0164 DF91      		pop r29
 219 0166 CF91      		pop r28
 220 0168 0895      		ret
 221               		.cfi_endproc
 222               	.LFE12:
 224               	.global	__vector_64
 226               	__vector_64:
 227               	.LFB13:
  62:Src/driver/flow_sensor.c **** 
  63:Src/driver/flow_sensor.c **** ISR(PORTD_INT0_vect)
  64:Src/driver/flow_sensor.c **** {
 228               		.loc 1 64 1 is_stmt 1 view -0
 229               		.cfi_startproc
 230 016a 8F93 8FB7 		__gcc_isr 1
 230      8F93 
 231 0170 9F93      		push r25
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 25, -2
 234               	/* prologue: Signal */
 235               	/* frame size = 0 */
 236               	/* stack size = 1...5 */
 237               	.L__stack_usage = 1 + __gcc_isr.n_pushed
  65:Src/driver/flow_sensor.c ****   flow1Ticks++;
 238               		.loc 1 65 3 view .LVU30
 239               		.loc 1 65 13 is_stmt 0 view .LVU31
 240 0172 8091 0000 		lds r24,flow1Ticks
 241 0176 9091 0000 		lds r25,flow1Ticks+1
 242 017a 0196      		adiw r24,1
 243 017c 8093 0000 		sts flow1Ticks,r24
 244 0180 9093 0000 		sts flow1Ticks+1,r25
 245               	/* epilogue start */
  66:Src/driver/flow_sensor.c **** }
 246               		.loc 1 66 1 view .LVU32
 247 0184 9F91      		pop r25
 248 0186 8F91 8FBF 		__gcc_isr 2
 248      8F91 
 249 018c 1895      		reti
 250               		__gcc_isr 0,r24
 251               		.cfi_endproc
 252               	.LFE13:
 254               	.global	end_stop1
 255               		.section .bss
 258               	end_stop1:
 259 0000 0000      		.zero	2
 260               		.comm	last_switch1,2,1
 261               	.global	switch1
 262               		.data
 265               	switch1:
 266 0000 0100      		.word	1
 267               	.global	qtyWater1
 268               		.section .bss
 271               	qtyWater1:
 272 0002 0000      		.zero	2
 273               	.global	flow1Ticks
 276               	flow1Ticks:
 277 0004 0000      		.zero	2
 278               	.global	flow1ml
 281               	flow1ml:
 282 0006 0000      		.zero	2
 283               	.global	flowTimer
 286               	flowTimer:
 287 0008 0000      		.zero	2
 288               	.global	flow1
 291               	flow1:
 292 000a 0000      		.zero	2
 293               		.text
 294               	.Letext0:
 295               		.file 2 "/usr/local/Cellar/avr-gcc/9.3.0/lib/avr-gcc/9/gcc/avr/9.3.0/include/stdint-gcc.h"
 296               		.file 3 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/avr/iox32a4u.h"
 297               		.file 4 "/usr/local/Cellar/avr-gcc/9.3.0/lib/avr-gcc/9/gcc/avr/9.3.0/include/stddef.h"
 298               		.file 5 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/stdio.h"
 299               		.file 6 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/stdlib.h"
 300               		.file 7 "Src/driver/../../Inc/driver/clock.h"
 301               		.file 8 "Src/driver/../../Inc/driver/uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 flow_sensor.c
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:4      *ABS*:000000000000003f __SREG__
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:5      *ABS*:0000000000000034 __CCP__
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:21     .text:0000000000000000 get_flow1_value
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:286    .bss:0000000000000008 flowTimer
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:276    .bss:0000000000000004 flow1Ticks
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:291    .bss:000000000000000a flow1
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:281    .bss:0000000000000006 flow1ml
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:271    .bss:0000000000000002 qtyWater1
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:226    .text:000000000000016a __vector_64
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.001
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:258    .bss:0000000000000000 end_stop1
                            *COM*:0000000000000002 last_switch1
/var/folders/yp/mmqk4_hx5c99vq73lkt1gzd00000gn/T//cck4zfuy.s:265    .data:0000000000000000 switch1

UNDEFINED SYMBOLS
__floatunsisf
__divsf3
__mulsf3
__fixunssfsi
get_timer_value
__udivmodhi4
spew
__do_copy_data
__do_clear_bss
