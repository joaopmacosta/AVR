   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 514               		.section	.rodata.str1.1,"aMS",@progbits,1
 515               	.LC0:
 516 0000 5354 4152 		.string	"START\n"
 516      540A 00
 517               		.section	.text.startup,"ax",@progbits
 519               	.global	main
 521               	main:
 522               		.stabd	46,0,0
   1:Src/core/main.c **** //***************************************************************************
   2:Src/core/main.c **** // Copyright (C) 2017 Laboratório de Sistemas e Tecnologia Subaquática      *
   3:Src/core/main.c **** // Departamento de Engenharia Electrotécnica e de Computadores              *
   4:Src/core/main.c **** // Rua Dr. Roberto Frias, 4200-465 Porto, Portugal                          *
   5:Src/core/main.c **** //***************************************************************************
   6:Src/core/main.c **** // Author: João Costa                                                       *
   7:Src/core/main.c **** //***************************************************************************
   8:Src/core/main.c **** 
   9:Src/core/main.c **** #include "../../Inc/core/main.h"
  10:Src/core/main.c **** 
  11:Src/core/main.c **** int main(void)
  12:Src/core/main.c **** {
 524               	.LM0:
 525               	.LFBB1:
 526               	/* prologue: function */
 527               	/* frame size = 0 */
 528               	/* stack size = 0 */
 529               	.L__stack_usage = 0
  13:Src/core/main.c **** 
  14:Src/core/main.c ****   cli();
 531               	.LM1:
 532               	/* #APP */
 533               	 ;  14 "Src/core/main.c" 1
 534 0000 F894      		cli
 535               	 ;  0 "" 2
 536               	/* #NOAPP */
 537               	.LBB4:
 538               	.LBB5:
 540               	.Ltext1:
   1:Src/core/../../Inc/core/../../Inc/core/board_init.h **** //***************************************************************************
   2:Src/core/../../Inc/core/../../Inc/core/board_init.h **** // Copyright (C) 2017 Laboratório de Sistemas e Tecnologia Subaquática      *
   3:Src/core/../../Inc/core/../../Inc/core/board_init.h **** // Departamento de Engenharia Electrotécnica e de Computadores              *
   4:Src/core/../../Inc/core/../../Inc/core/board_init.h **** // Rua Dr. Roberto Frias, 4200-465 Porto, Portugal                          *
   5:Src/core/../../Inc/core/../../Inc/core/board_init.h **** //***************************************************************************
   6:Src/core/../../Inc/core/../../Inc/core/board_init.h **** // Author: Pedro Gonçalves                                                  *
   7:Src/core/../../Inc/core/../../Inc/core/board_init.h **** //***************************************************************************
   8:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
   9:Src/core/../../Inc/core/../../Inc/core/board_init.h **** /// ISO C 99 headers.
  10:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include <stddef.h>
  11:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include <inttypes.h>
  12:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include <stdio.h>
  13:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include <stdlib.h>
  14:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include <string.h>
  15:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  16:Src/core/../../Inc/core/../../Inc/core/board_init.h **** // Local Headers
  17:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include "../../config.h"
  18:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include "../driver/io.h"
  19:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include "../../Inc/driver/uart.h"
  20:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include "../../TC_driver/TC_driver.h"
  21:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  22:Src/core/../../Inc/core/../../Inc/core/board_init.h **** // AVR headers.
  23:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #include <avr/io.h>
  24:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  25:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #ifndef BOARD_INIT_H_INCLUDED_
  26:Src/core/../../Inc/core/../../Inc/core/board_init.h **** #define BOARD_INIT_H_INCLUDED_
  27:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  28:Src/core/../../Inc/core/../../Inc/core/board_init.h **** static inline void
  29:Src/core/../../Inc/core/../../Inc/core/board_init.h **** board_init(void)
  30:Src/core/../../Inc/core/../../Inc/core/board_init.h **** {
  31:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //***********************************************************************
  32:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   // System Clock.                                                        *
  33:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //***********************************************************************
  34:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   // ENABLE INTERNAL 32MHZ OSCILLATOR
  35:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  36:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   CCP = CCP_IOREG_gc;
 542               	.LM2:
 543 0002 88ED      		ldi r24,lo8(-40)
 544 0004 84BF      		out __CCP__,r24
  37:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  38:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   OSC.CTRL = OSC_RC32MEN_bm;
 546               	.LM3:
 547 0006 82E0      		ldi r24,lo8(2)
 548 0008 8093 5000 		sts 80,r24
 549               	.L2:
  39:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  40:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   while (!(OSC.STATUS & OSC_RC32MRDY_bm))
 551               	.LM4:
 552 000c 8091 5100 		lds r24,81
 553 0010 81FF      		sbrs r24,1
 554 0012 00C0      		rjmp .L2
  41:Src/core/../../Inc/core/../../Inc/core/board_init.h ****     ;
  42:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  43:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   CCP = CCP_IOREG_gc;
 556               	.LM5:
 557 0014 88ED      		ldi r24,lo8(-40)
 558 0016 84BF      		out __CCP__,r24
  44:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  45:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   CLK.CTRL = CLK_SCLKSEL_RC32M_gc;
 560               	.LM6:
 561 0018 81E0      		ldi r24,lo8(1)
 562 001a 8093 4000 		sts 64,r24
  46:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  47:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //***********************************************************************
  48:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //* GPIO.                                                               *
  49:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //***********************************************************************
  50:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  51:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   // Setup pins as IN/OUTputs
  52:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   GPIO_CFG_OUT(LED, false);
 564               	.LM7:
 565 001e 40E0      		ldi r20,0
 566 0020 60E0      		ldi r22,0
 567 0022 80E4      		ldi r24,lo8(64)
 568 0024 96E0      		ldi r25,lo8(6)
 569 0026 0E94 0000 		call gpio_cfg_out_np
  53:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  54:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   GPIO_CFG_OUT(UART0_TX, false);
 571               	.LM8:
 572 002a 40E0      		ldi r20,0
 573 002c 63E0      		ldi r22,lo8(3)
 574 002e 80E4      		ldi r24,lo8(64)
 575 0030 96E0      		ldi r25,lo8(6)
 576 0032 0E94 0000 		call gpio_cfg_out_np
  55:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   GPIO_CFG_IN(UART0_RX);
 578               	.LM9:
 579 0036 62E0      		ldi r22,lo8(2)
 580 0038 80E4      		ldi r24,lo8(64)
 581 003a 96E0      		ldi r25,lo8(6)
 582 003c 0E94 0000 		call gpio_cfg_in_np
  56:Src/core/../../Inc/core/../../Inc/core/board_init.h **** 
  57:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //***********************************************************************
  58:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //* Interrupt levels.                                                   *
  59:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //***********************************************************************
  60:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   //Enables High, Medium and Low Level Interrupts
  61:Src/core/../../Inc/core/../../Inc/core/board_init.h ****   PMIC.CTRL |= PMIC_HILVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;
 584               	.LM10:
 585 0040 8091 A200 		lds r24,162
 586 0044 8760      		ori r24,lo8(7)
 587 0046 8093 A200 		sts 162,r24
 588               	.LBE5:
 589               	.LBE4:
 591               	.Ltext2:
  15:Src/core/main.c ****   board_init();
  16:Src/core/main.c ****   initUsart();
 593               	.LM11:
 594 004a 0E94 0000 		call initUsart
  17:Src/core/main.c ****   sei();
 596               	.LM12:
 597               	/* #APP */
 598               	 ;  17 "Src/core/main.c" 1
 599 004e 7894      		sei
 600               	 ;  0 "" 2
  18:Src/core/main.c **** 
  19:Src/core/main.c ****   spew("START\n");
 602               	.LM13:
 603               	/* #NOAPP */
 604 0050 80E0      		ldi r24,lo8(.LC0)
 605 0052 90E0      		ldi r25,hi8(.LC0)
 606 0054 9F93      		push r25
 607 0056 8F93      		push r24
 608 0058 0E94 0000 		call spew
 609 005c 0F90      		pop __tmp_reg__
 610 005e 0F90      		pop __tmp_reg__
 611               	.L3:
  20:Src/core/main.c ****   while (1)
  21:Src/core/main.c ****   {
  22:Src/core/main.c ****     if (is_new_command_available())
 613               	.LM14:
 614 0060 0E94 0000 		call is_new_command_available
 615 0064 8823      		tst r24
 616 0066 01F0      		breq .L3
  23:Src/core/main.c ****     {
  24:Src/core/main.c ****       parse_cpu_data_rx(get_cpu_buffer());
 618               	.LM15:
 619 0068 0E94 0000 		call get_cpu_buffer
 620 006c 0E94 0000 		call parse_cpu_data_rx
  25:Src/core/main.c ****       new_command_read_done();
 622               	.LM16:
 623 0070 0E94 0000 		call new_command_read_done
 624 0074 00C0      		rjmp .L3
 626               	.Lscope1:
 628               		.stabd	78,0,0
 629               		.comm	_cpuData,6,1
 631               		.text
 633               	.Letext0:
 634               		.ident	"GCC: (GNU) 5.4.0"
 635               	.global __do_copy_data
 636               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZYwnb7.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZYwnb7.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZYwnb7.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZYwnb7.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/ccZYwnb7.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZYwnb7.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZYwnb7.s:521    .text.startup:0000000000000000 main
                            *COM*:0000000000000006 _cpuData

UNDEFINED SYMBOLS
gpio_cfg_out_np
gpio_cfg_in_np
initUsart
spew
is_new_command_available
get_cpu_buffer
parse_cpu_data_rx
new_command_read_done
__do_copy_data
__do_clear_bss
