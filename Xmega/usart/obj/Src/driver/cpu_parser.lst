   1               		.file	"cpu_parser.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 507               	.global	CRC8_CPU
 509               	CRC8_CPU:
 510               		.stabd	46,0,0
   1:Src/driver/cpu_parser.c **** //***************************************************************************
   2:Src/driver/cpu_parser.c **** // Copyright (C) 2017 Laboratório de Sistemas e Tecnologia Subaquática      *
   3:Src/driver/cpu_parser.c **** // Departamento de Engenharia Electrotécnica e de Computadores              *
   4:Src/driver/cpu_parser.c **** // Rua Dr. Roberto Frias, 4200-465 Porto, Portugal                          *
   5:Src/driver/cpu_parser.c **** //***************************************************************************
   6:Src/driver/cpu_parser.c **** // Author: Pedro Gonçalves                                                  *
   7:Src/driver/cpu_parser.c **** //***************************************************************************
   8:Src/driver/cpu_parser.c **** 
   9:Src/driver/cpu_parser.c **** #include <stdio.h>
  10:Src/driver/cpu_parser.c **** #include <stdlib.h>
  11:Src/driver/cpu_parser.c **** #include <avr/io.h>
  12:Src/driver/cpu_parser.c **** #include <avr/interrupt.h>
  13:Src/driver/cpu_parser.c **** #include <util/delay.h>
  14:Src/driver/cpu_parser.c **** #include <avr/pgmspace.h>
  15:Src/driver/cpu_parser.c **** #include <stdbool.h>
  16:Src/driver/cpu_parser.c **** 
  17:Src/driver/cpu_parser.c **** #include "../../Inc/driver/io.h"
  18:Src/driver/cpu_parser.c **** #include "../../Inc/driver/uart.h"
  19:Src/driver/cpu_parser.c **** #include "../../Inc/driver/cpu_parser.h"
  20:Src/driver/cpu_parser.c **** #include "../../config.h"
  21:Src/driver/cpu_parser.c **** 
  22:Src/driver/cpu_parser.c **** const char *state_mode = "s";
  23:Src/driver/cpu_parser.c **** const char *all_mode = "a";
  24:Src/driver/cpu_parser.c **** bool is_preamble = true;
  25:Src/driver/cpu_parser.c **** char text_to_send_cpu[16];
  26:Src/driver/cpu_parser.c **** 
  27:Src/driver/cpu_parser.c **** uint8_t csum_cpu;
  28:Src/driver/cpu_parser.c **** uint8_t parser_mode = PARSER;
  29:Src/driver/cpu_parser.c **** 
  30:Src/driver/cpu_parser.c **** char data_cpu_rx[UART_RX_BUF_SIZE];
  31:Src/driver/cpu_parser.c **** char data_cpu_cmd[UART_RX_BUF_SIZE];
  32:Src/driver/cpu_parser.c **** 
  33:Src/driver/cpu_parser.c **** uint8_t cnt_cpu = 0;
  34:Src/driver/cpu_parser.c **** 
  35:Src/driver/cpu_parser.c **** bool new_command = false;
  36:Src/driver/cpu_parser.c **** 
  37:Src/driver/cpu_parser.c **** enum
  38:Src/driver/cpu_parser.c **** {
  39:Src/driver/cpu_parser.c ****     START = 'S',
  40:Src/driver/cpu_parser.c ****     STOP = 'A'
  41:Src/driver/cpu_parser.c **** };
  42:Src/driver/cpu_parser.c **** 
  43:Src/driver/cpu_parser.c **** uint8_t CRC8_CPU(unsigned char *data)
  44:Src/driver/cpu_parser.c **** {
 512               	.LM0:
 513               	.LFBB1:
 514               	/* prologue: function */
 515               	/* frame size = 0 */
 516               	/* stack size = 0 */
 517               	.L__stack_usage = 0
 518 0000 AC01      		movw r20,r24
  45:Src/driver/cpu_parser.c ****     uint8_t csum = 0x00;
  46:Src/driver/cpu_parser.c ****     uint8_t t = 0;
 520               	.LM1:
 521 0002 20E0      		ldi r18,0
  45:Src/driver/cpu_parser.c ****     uint8_t csum = 0x00;
 523               	.LM2:
 524 0004 80E0      		ldi r24,0
 525               	.L2:
  47:Src/driver/cpu_parser.c ****     while (data[t] != '*')
 527               	.LM3:
 528 0006 FA01      		movw r30,r20
 529 0008 E20F      		add r30,r18
 530 000a F11D      		adc r31,__zero_reg__
 531 000c 3081      		ld r19,Z
 532 000e 3A32      		cpi r19,lo8(42)
 533 0010 01F0      		breq .L5
  48:Src/driver/cpu_parser.c ****     {
  49:Src/driver/cpu_parser.c ****         csum ^= data[t];
 535               	.LM4:
 536 0012 8327      		eor r24,r19
  50:Src/driver/cpu_parser.c ****         t++;
 538               	.LM5:
 539 0014 2F5F      		subi r18,lo8(-(1))
 540 0016 00C0      		rjmp .L2
 541               	.L5:
  51:Src/driver/cpu_parser.c ****     }
  52:Src/driver/cpu_parser.c ****     //(csum | 0x80)
  53:Src/driver/cpu_parser.c ****     return (csum | 0x80);
  54:Src/driver/cpu_parser.c **** }
 543               	.LM6:
 544 0018 8068      		ori r24,lo8(-128)
 545 001a 0895      		ret
 551               	.Lscope1:
 553               		.stabd	78,0,0
 554               		.section	.rodata.str1.1,"aMS",@progbits,1
 555               	.LC0:
 556 0000 2573 00   		.string	"%s"
 557               		.text
 560               	.global	cpu_parser
 562               	cpu_parser:
 563               		.stabd	46,0,0
  55:Src/driver/cpu_parser.c **** 
  56:Src/driver/cpu_parser.c **** void cpu_parser(uint8_t data)
  57:Src/driver/cpu_parser.c **** {
 565               	.LM7:
 566               	.LFBB2:
 567 001c CF93      		push r28
 568               	/* prologue: function */
 569               	/* frame size = 0 */
 570               	/* stack size = 1 */
 571               	.L__stack_usage = 1
 572 001e C82F      		mov r28,r24
  58:Src/driver/cpu_parser.c ****     if (parser_mode == PARSER)
 574               	.LM8:
 575 0020 8091 0000 		lds r24,parser_mode
 576 0024 8111      		cpse r24,__zero_reg__
 577 0026 00C0      		rjmp .L7
  59:Src/driver/cpu_parser.c ****     {
  60:Src/driver/cpu_parser.c ****         if (data == '@')
 579               	.LM9:
 580 0028 C034      		cpi r28,lo8(64)
 581 002a 01F0      		breq .+2
 582 002c 00C0      		rjmp .L6
  61:Src/driver/cpu_parser.c ****         {
  62:Src/driver/cpu_parser.c ****             cnt_cpu = 0;
 584               	.LM10:
 585 002e 1092 0000 		sts cnt_cpu,__zero_reg__
  63:Src/driver/cpu_parser.c ****             memset(&data_cpu_rx, '\0', sizeof(data_cpu_rx));
 587               	.LM11:
 588 0032 40E2      		ldi r20,lo8(32)
 589 0034 50E0      		ldi r21,0
 590 0036 60E0      		ldi r22,0
 591 0038 70E0      		ldi r23,0
 592 003a 80E0      		ldi r24,lo8(data_cpu_rx)
 593 003c 90E0      		ldi r25,hi8(data_cpu_rx)
 594 003e 0E94 0000 		call memset
  64:Src/driver/cpu_parser.c ****             data_cpu_rx[cnt_cpu] = data;
 596               	.LM12:
 597 0042 8091 0000 		lds r24,cnt_cpu
 598 0046 E82F      		mov r30,r24
 599 0048 F0E0      		ldi r31,0
 600 004a E050      		subi r30,lo8(-(data_cpu_rx))
 601 004c F040      		sbci r31,hi8(-(data_cpu_rx))
 602 004e C083      		st Z,r28
  65:Src/driver/cpu_parser.c ****             cnt_cpu++;
 604               	.LM13:
 605 0050 8F5F      		subi r24,lo8(-(1))
 606 0052 8093 0000 		sts cnt_cpu,r24
  66:Src/driver/cpu_parser.c ****             parser_mode = DATA;
 608               	.LM14:
 609 0056 81E0      		ldi r24,lo8(1)
 610 0058 8093 0000 		sts parser_mode,r24
 611 005c 00C0      		rjmp .L11
 612               	.L7:
  67:Src/driver/cpu_parser.c ****             csum_cpu = data;
  68:Src/driver/cpu_parser.c ****         }
  69:Src/driver/cpu_parser.c ****     }
  70:Src/driver/cpu_parser.c ****     else if (parser_mode == DATA)
 614               	.LM15:
 615 005e 8130      		cpi r24,lo8(1)
 616 0060 01F4      		brne .L9
 617 0062 E091 0000 		lds r30,cnt_cpu
  71:Src/driver/cpu_parser.c ****     {
  72:Src/driver/cpu_parser.c ****         //spew("DATA\n", data);
  73:Src/driver/cpu_parser.c ****         if (data == '*')
 619               	.LM16:
 620 0066 CA32      		cpi r28,lo8(42)
 621 0068 01F4      		brne .L10
  74:Src/driver/cpu_parser.c ****         {
  75:Src/driver/cpu_parser.c ****             parser_mode = CSUM;
 623               	.LM17:
 624 006a 82E0      		ldi r24,lo8(2)
 625 006c 8093 0000 		sts parser_mode,r24
  76:Src/driver/cpu_parser.c ****             data_cpu_rx[cnt_cpu] = data;
 627               	.LM18:
 628 0070 F0E0      		ldi r31,0
 629 0072 E050      		subi r30,lo8(-(data_cpu_rx))
 630 0074 F040      		sbci r31,hi8(-(data_cpu_rx))
 631 0076 C083      		st Z,r28
 632 0078 00C0      		rjmp .L6
 633               	.L10:
  77:Src/driver/cpu_parser.c ****             //verifica cnt_cpu < buf
  78:Src/driver/cpu_parser.c ****         }
  79:Src/driver/cpu_parser.c ****         else
  80:Src/driver/cpu_parser.c ****         {
  81:Src/driver/cpu_parser.c ****             data_cpu_rx[cnt_cpu] = data;
 635               	.LM19:
 636 007a AE2F      		mov r26,r30
 637 007c B0E0      		ldi r27,0
 638 007e A050      		subi r26,lo8(-(data_cpu_rx))
 639 0080 B040      		sbci r27,hi8(-(data_cpu_rx))
 640 0082 CC93      		st X,r28
  82:Src/driver/cpu_parser.c ****             cnt_cpu++;
 642               	.LM20:
 643 0084 EF5F      		subi r30,lo8(-(1))
 644 0086 E093 0000 		sts cnt_cpu,r30
  83:Src/driver/cpu_parser.c ****             csum_cpu ^= data;
 646               	.LM21:
 647 008a 8091 0000 		lds r24,csum_cpu
 648 008e C827      		eor r28,r24
 649               	.L11:
 650 0090 C093 0000 		sts csum_cpu,r28
 651 0094 00C0      		rjmp .L6
 652               	.L9:
  84:Src/driver/cpu_parser.c ****         }
  85:Src/driver/cpu_parser.c ****     }
  86:Src/driver/cpu_parser.c ****     else if (parser_mode == CSUM)
 654               	.LM22:
 655 0096 8230      		cpi r24,lo8(2)
 656 0098 01F4      		brne .L6
  87:Src/driver/cpu_parser.c ****     {
  88:Src/driver/cpu_parser.c ****         //if (csum_cpu == data)
  89:Src/driver/cpu_parser.c ****         //{
  90:Src/driver/cpu_parser.c ****         data_cpu_rx[cnt_cpu] = '\0';
 658               	.LM23:
 659 009a 80E0      		ldi r24,lo8(data_cpu_rx)
 660 009c 90E0      		ldi r25,hi8(data_cpu_rx)
 661 009e E091 0000 		lds r30,cnt_cpu
 662 00a2 F0E0      		ldi r31,0
 663 00a4 E050      		subi r30,lo8(-(data_cpu_rx))
 664 00a6 F040      		sbci r31,hi8(-(data_cpu_rx))
 665 00a8 1082      		st Z,__zero_reg__
  91:Src/driver/cpu_parser.c ****         sprintf(data_cpu_cmd, "%s", data_cpu_rx);
 667               	.LM24:
 668 00aa 9F93      		push r25
 669 00ac 8F93      		push r24
 670 00ae 80E0      		ldi r24,lo8(.LC0)
 671 00b0 90E0      		ldi r25,hi8(.LC0)
 672 00b2 9F93      		push r25
 673 00b4 8F93      		push r24
 674 00b6 80E0      		ldi r24,lo8(data_cpu_cmd)
 675 00b8 90E0      		ldi r25,hi8(data_cpu_cmd)
 676 00ba 9F93      		push r25
 677 00bc 8F93      		push r24
 678 00be 0E94 0000 		call sprintf
  92:Src/driver/cpu_parser.c ****         new_command = true;
 680               	.LM25:
 681 00c2 81E0      		ldi r24,lo8(1)
 682 00c4 8093 0000 		sts new_command,r24
  93:Src/driver/cpu_parser.c ****         //}
  94:Src/driver/cpu_parser.c ****         parser_mode = PARSER;
 684               	.LM26:
 685 00c8 1092 0000 		sts parser_mode,__zero_reg__
 686 00cc 0F90      		pop __tmp_reg__
 687 00ce 0F90      		pop __tmp_reg__
 688 00d0 0F90      		pop __tmp_reg__
 689 00d2 0F90      		pop __tmp_reg__
 690 00d4 0F90      		pop __tmp_reg__
 691 00d6 0F90      		pop __tmp_reg__
 692               	.L6:
 693               	/* epilogue start */
  95:Src/driver/cpu_parser.c ****     }
  96:Src/driver/cpu_parser.c **** }
 695               	.LM27:
 696 00d8 CF91      		pop r28
 697 00da 0895      		ret
 699               	.Lscope2:
 701               		.stabd	78,0,0
 702               		.section	.rodata.str1.1
 703               	.LC1:
 704 0003 7061 7273 		.string	"parse_cpu_data_rx: %s\n"
 704      655F 6370 
 704      755F 6461 
 704      7461 5F72 
 704      783A 2025 
 705               	.LC2:
 706 001a 2C00      		.string	","
 707               	.LC3:
 708 001c 6F6E 0A00 		.string	"on\n"
 709               	.LC4:
 710 0020 6F66 660A 		.string	"off\n"
 710      00
 711               		.text
 713               	.global	parse_cpu_data_rx
 715               	parse_cpu_data_rx:
 716               		.stabd	46,0,0
  97:Src/driver/cpu_parser.c **** 
  98:Src/driver/cpu_parser.c **** /*bool read_new_command(void)
  99:Src/driver/cpu_parser.c **** {
 100:Src/driver/cpu_parser.c ****     if (new_command)
 101:Src/driver/cpu_parser.c ****     {
 102:Src/driver/cpu_parser.c ****         parse_cpu_data_rx(get_cpu_cmd());
 103:Src/driver/cpu_parser.c ****         new_command = false;
 104:Src/driver/cpu_parser.c ****         return true;
 105:Src/driver/cpu_parser.c ****     }
 106:Src/driver/cpu_parser.c ****     else
 107:Src/driver/cpu_parser.c ****     {
 108:Src/driver/cpu_parser.c ****         return false;
 109:Src/driver/cpu_parser.c ****     }
 110:Src/driver/cpu_parser.c **** }*/
 111:Src/driver/cpu_parser.c **** 
 112:Src/driver/cpu_parser.c **** void parse_cpu_data_rx(char *data_rx)
 113:Src/driver/cpu_parser.c **** {
 718               	.LM28:
 719               	.LFBB3:
 720 00dc 0F93      		push r16
 721 00de 1F93      		push r17
 722 00e0 CF93      		push r28
 723 00e2 DF93      		push r29
 724 00e4 00D0      		rcall .
 725 00e6 CDB7      		in r28,__SP_L__
 726 00e8 DEB7      		in r29,__SP_H__
 727               	/* prologue: function */
 728               	/* frame size = 2 */
 729               	/* stack size = 6 */
 730               	.L__stack_usage = 6
 731 00ea 8C01      		movw r16,r24
 114:Src/driver/cpu_parser.c ****     spew("parse_cpu_data_rx: %s\n", data_rx);
 733               	.LM29:
 734 00ec 1F93      		push r17
 735 00ee 8F93      		push r24
 736 00f0 80E0      		ldi r24,lo8(.LC1)
 737 00f2 90E0      		ldi r25,hi8(.LC1)
 738 00f4 9F93      		push r25
 739 00f6 8F93      		push r24
 740 00f8 0E94 0000 		call spew
 115:Src/driver/cpu_parser.c ****     char *word = strtok(data_rx, ",");
 742               	.LM30:
 743 00fc 60E0      		ldi r22,lo8(.LC2)
 744 00fe 70E0      		ldi r23,hi8(.LC2)
 745 0100 C801      		movw r24,r16
 746 0102 0E94 0000 		call strtok
 116:Src/driver/cpu_parser.c ****     char pre_mode[2];
 117:Src/driver/cpu_parser.c ****     sprintf(pre_mode, "%s", word);
 748               	.LM31:
 749 0106 9F93      		push r25
 750 0108 8F93      		push r24
 751 010a 80E0      		ldi r24,lo8(.LC0)
 752 010c 90E0      		ldi r25,hi8(.LC0)
 753 010e 9F93      		push r25
 754 0110 8F93      		push r24
 755 0112 8E01      		movw r16,r28
 756 0114 0F5F      		subi r16,-1
 757 0116 1F4F      		sbci r17,-1
 758 0118 1F93      		push r17
 759 011a 0F93      		push r16
 760 011c 0E94 0000 		call sprintf
 118:Src/driver/cpu_parser.c **** 
 119:Src/driver/cpu_parser.c ****     switch (pre_mode[1])
 762               	.LM32:
 763 0120 CDBF      		out __SP_L__,r28
 764 0122 DEBF      		out __SP_H__,r29
 765 0124 8A81      		ldd r24,Y+2
 766 0126 8134      		cpi r24,lo8(65)
 767 0128 01F0      		breq .L14
 768 012a 8335      		cpi r24,lo8(83)
 769 012c 01F4      		brne .L12
 120:Src/driver/cpu_parser.c ****     {
 121:Src/driver/cpu_parser.c ****     case START:
 122:Src/driver/cpu_parser.c ****         spew("on\n");
 771               	.LM33:
 772 012e 80E0      		ldi r24,lo8(.LC3)
 773 0130 90E0      		ldi r25,hi8(.LC3)
 774 0132 9F93      		push r25
 775 0134 8F93      		push r24
 776 0136 0E94 0000 		call spew
 123:Src/driver/cpu_parser.c ****         GPIO_SET(LED);
 778               	.LM34:
 779 013a 60E0      		ldi r22,0
 780 013c 80E4      		ldi r24,lo8(64)
 781 013e 96E0      		ldi r25,lo8(6)
 782 0140 0E94 0000 		call gpio_set_np
 124:Src/driver/cpu_parser.c ****         _cpuData.cmd = atoi(pre_mode);
 784               	.LM35:
 785 0144 C801      		movw r24,r16
 786 0146 0E94 0000 		call atoi
 787 014a 8093 0000 		sts _cpuData,r24
 788 014e 9093 0000 		sts _cpuData+1,r25
 125:Src/driver/cpu_parser.c **** 
 126:Src/driver/cpu_parser.c ****         word = strtok(NULL, ",");
 790               	.LM36:
 791 0152 60E0      		ldi r22,lo8(.LC2)
 792 0154 70E0      		ldi r23,hi8(.LC2)
 793 0156 80E0      		ldi r24,0
 794 0158 90E0      		ldi r25,0
 795 015a 0E94 0000 		call strtok
 127:Src/driver/cpu_parser.c ****         pre_mode[0] = word[0];
 797               	.LM37:
 798 015e FC01      		movw r30,r24
 799 0160 8081      		ld r24,Z
 800 0162 8983      		std Y+1,r24
 128:Src/driver/cpu_parser.c ****         pre_mode[1] = '\0';
 802               	.LM38:
 803 0164 1A82      		std Y+2,__zero_reg__
 129:Src/driver/cpu_parser.c **** 
 130:Src/driver/cpu_parser.c ****         _cpuData.arg1 = atoi(pre_mode);
 805               	.LM39:
 806 0166 C801      		movw r24,r16
 807 0168 0E94 0000 		call atoi
 808 016c 8093 0000 		sts _cpuData+2,r24
 809 0170 9093 0000 		sts _cpuData+2+1,r25
 810 0174 00C0      		rjmp .L16
 811               	.L14:
 131:Src/driver/cpu_parser.c **** 
 132:Src/driver/cpu_parser.c ****         //spew("CMD: %d | ARG: %d\n", _cpuData.cmd, _cpuData.arg1);
 133:Src/driver/cpu_parser.c **** 
 134:Src/driver/cpu_parser.c ****         //DO STUFF!
 135:Src/driver/cpu_parser.c ****         break;
 136:Src/driver/cpu_parser.c **** 
 137:Src/driver/cpu_parser.c ****     case STOP:
 138:Src/driver/cpu_parser.c ****         spew("off\n");
 813               	.LM40:
 814 0176 80E0      		ldi r24,lo8(.LC4)
 815 0178 90E0      		ldi r25,hi8(.LC4)
 816 017a 9F93      		push r25
 817 017c 8F93      		push r24
 818 017e 0E94 0000 		call spew
 139:Src/driver/cpu_parser.c ****         GPIO_CLR(LED);
 820               	.LM41:
 821 0182 60E0      		ldi r22,0
 822 0184 80E4      		ldi r24,lo8(64)
 823 0186 96E0      		ldi r25,lo8(6)
 824 0188 0E94 0000 		call gpio_clr_np
 825               	.L16:
 140:Src/driver/cpu_parser.c ****         break;
 827               	.LM42:
 828 018c 0F90      		pop __tmp_reg__
 829 018e 0F90      		pop __tmp_reg__
 830               	.L12:
 831               	/* epilogue start */
 141:Src/driver/cpu_parser.c **** 
 142:Src/driver/cpu_parser.c ****     default:
 143:Src/driver/cpu_parser.c **** 
 144:Src/driver/cpu_parser.c ****         break;
 145:Src/driver/cpu_parser.c ****     }
 146:Src/driver/cpu_parser.c **** }
 833               	.LM43:
 834 0190 0F90      		pop __tmp_reg__
 835 0192 0F90      		pop __tmp_reg__
 836 0194 DF91      		pop r29
 837 0196 CF91      		pop r28
 838 0198 1F91      		pop r17
 839 019a 0F91      		pop r16
 840 019c 0895      		ret
 845               	.Lscope3:
 847               		.stabd	78,0,0
 849               	.global	get_cpu_buffer
 851               	get_cpu_buffer:
 852               		.stabd	46,0,0
 147:Src/driver/cpu_parser.c **** 
 148:Src/driver/cpu_parser.c **** char *get_cpu_buffer(void)
 149:Src/driver/cpu_parser.c **** {
 854               	.LM44:
 855               	.LFBB4:
 856               	/* prologue: function */
 857               	/* frame size = 0 */
 858               	/* stack size = 0 */
 859               	.L__stack_usage = 0
 150:Src/driver/cpu_parser.c ****     return data_cpu_cmd;
 151:Src/driver/cpu_parser.c **** }
 861               	.LM45:
 862 019e 80E0      		ldi r24,lo8(data_cpu_cmd)
 863 01a0 90E0      		ldi r25,hi8(data_cpu_cmd)
 864 01a2 0895      		ret
 866               	.Lscope4:
 868               		.stabd	78,0,0
 870               	.global	is_new_command_available
 872               	is_new_command_available:
 873               		.stabd	46,0,0
 152:Src/driver/cpu_parser.c **** 
 153:Src/driver/cpu_parser.c **** bool is_new_command_available(void)
 154:Src/driver/cpu_parser.c **** {
 875               	.LM46:
 876               	.LFBB5:
 877               	/* prologue: function */
 878               	/* frame size = 0 */
 879               	/* stack size = 0 */
 880               	.L__stack_usage = 0
 155:Src/driver/cpu_parser.c ****     return new_command;
 156:Src/driver/cpu_parser.c **** }
 882               	.LM47:
 883 01a4 8091 0000 		lds r24,new_command
 884 01a8 0895      		ret
 886               	.Lscope5:
 888               		.stabd	78,0,0
 890               	.global	new_command_read_done
 892               	new_command_read_done:
 893               		.stabd	46,0,0
 157:Src/driver/cpu_parser.c **** 
 158:Src/driver/cpu_parser.c **** void new_command_read_done(void)
 159:Src/driver/cpu_parser.c **** {
 895               	.LM48:
 896               	.LFBB6:
 897               	/* prologue: function */
 898               	/* frame size = 0 */
 899               	/* stack size = 0 */
 900               	.L__stack_usage = 0
 160:Src/driver/cpu_parser.c ****     new_command = false;
 902               	.LM49:
 903 01aa 1092 0000 		sts new_command,__zero_reg__
 904 01ae 0895      		ret
 906               	.Lscope6:
 908               		.stabd	78,0,0
 909               	.global	new_command
 910               		.section .bss
 913               	new_command:
 914 0000 00        		.zero	1
 915               	.global	cnt_cpu
 918               	cnt_cpu:
 919 0001 00        		.zero	1
 920               		.comm	data_cpu_cmd,32,1
 921               		.comm	data_cpu_rx,32,1
 922               	.global	parser_mode
 925               	parser_mode:
 926 0002 00        		.zero	1
 927               		.comm	csum_cpu,1,1
 928               		.comm	text_to_send_cpu,16,1
 929               	.global	is_preamble
 930               		.data
 933               	is_preamble:
 934 0000 01        		.byte	1
 935               	.global	all_mode
 936               		.section	.rodata.str1.1
 937               	.LC5:
 938 0025 6100      		.string	"a"
 939               		.data
 942               	all_mode:
 943 0001 0000      		.word	.LC5
 944               	.global	state_mode
 945               		.section	.rodata.str1.1
 946               	.LC6:
 947 0027 7300      		.string	"s"
 948               		.data
 951               	state_mode:
 952 0003 0000      		.word	.LC6
 953               		.comm	_cpuData,6,1
 965               		.text
 967               	.Letext0:
 968               		.ident	"GCC: (GNU) 5.4.0"
 969               	.global __do_copy_data
 970               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 cpu_parser.c
     /tmp/ccXm0JQ7.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXm0JQ7.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXm0JQ7.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXm0JQ7.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/ccXm0JQ7.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXm0JQ7.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXm0JQ7.s:509    .text:0000000000000000 CRC8_CPU
     /tmp/ccXm0JQ7.s:562    .text:000000000000001c cpu_parser
     /tmp/ccXm0JQ7.s:925    .bss:0000000000000002 parser_mode
     /tmp/ccXm0JQ7.s:918    .bss:0000000000000001 cnt_cpu
                            *COM*:0000000000000020 data_cpu_rx
                            *COM*:0000000000000001 csum_cpu
                            *COM*:0000000000000020 data_cpu_cmd
     /tmp/ccXm0JQ7.s:913    .bss:0000000000000000 new_command
     /tmp/ccXm0JQ7.s:715    .text:00000000000000dc parse_cpu_data_rx
                            *COM*:0000000000000006 _cpuData
     /tmp/ccXm0JQ7.s:851    .text:000000000000019e get_cpu_buffer
     /tmp/ccXm0JQ7.s:872    .text:00000000000001a4 is_new_command_available
     /tmp/ccXm0JQ7.s:892    .text:00000000000001aa new_command_read_done
                            *COM*:0000000000000010 text_to_send_cpu
     /tmp/ccXm0JQ7.s:933    .data:0000000000000000 is_preamble
     /tmp/ccXm0JQ7.s:942    .data:0000000000000001 all_mode
     /tmp/ccXm0JQ7.s:951    .data:0000000000000003 state_mode

UNDEFINED SYMBOLS
memset
sprintf
spew
strtok
gpio_set_np
atoi
gpio_clr_np
__do_copy_data
__do_clear_bss
